{
  "openapi": "3.0.3",
  "info": {
    "title": "HCBS Revenue Management System API",
    "description": "API for the HCBS Revenue Management System, providing endpoints for claims management, billing workflows, payment reconciliation, and financial reporting.",
    "version": "1.0.0",
    "contact": {
      "name": "HCBS Support",
      "email": "support@thinkcaring.com",
      "url": "https://thinkcaring.com/support"
    },
    "license": {
      "name": "Proprietary",
      "url": "https://thinkcaring.com/license"
    }
  },
  "servers": [
    {
      "url": "/api",
      "description": "Production API"
    },
    {
      "url": "/api/v1",
      "description": "Versioned API"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication and session management endpoints"
    },
    {
      "name": "Users",
      "description": "User management endpoints"
    },
    {
      "name": "Clients",
      "description": "Client management endpoints"
    },
    {
      "name": "Services",
      "description": "Service management endpoints"
    },
    {
      "name": "Claims",
      "description": "Claim management endpoints"
    },
    {
      "name": "Billing",
      "description": "Billing workflow endpoints"
    },
    {
      "name": "Payments",
      "description": "Payment management endpoints"
    },
    {
      "name": "Reports",
      "description": "Reporting and analytics endpoints"
    },
    {
      "name": "Settings",
      "description": "System settings endpoints"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User login",
        "description": "Authenticates a user with email and password credentials",
        "operationId": "login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful authentication",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/LoginResponse"
                    },
                    {
                      "$ref": "#/components/schemas/MfaRequiredResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Account locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh token",
        "description": "Refresh access token using refresh token",
        "operationId": "refreshToken",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Expired or invalid refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/mfa/verify": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify MFA code",
        "description": "Verify multi-factor authentication code",
        "operationId": "verifyMfa",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MfaVerifyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "MFA verification successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid MFA code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or expired MFA token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User logout",
        "description": "Invalidate user session and tokens",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Forgot password",
        "description": "Request password reset for a user account",
        "operationId": "forgotPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Reset password",
        "description": "Reset user password with token from email",
        "operationId": "resetPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "description": "Retrieve list of users with pagination and filtering",
        "operationId": "getUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/SortByParam"
          },
          {
            "$ref": "#/components/parameters/SortOrderParam"
          },
          {
            "$ref": "#/components/parameters/SearchParam"
          },
          {
            "$ref": "#/components/parameters/StatusParam"
          },
          {
            "name": "roleId",
            "in": "query",
            "description": "Filter by role ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create user",
        "description": "Create a new user account",
        "operationId": "createUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID",
        "description": "Retrieve user details by ID",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user",
        "description": "Update user account details",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user",
        "description": "Delete or deactivate a user account",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/{id}/change-password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Change user password",
        "description": "Change password for user account",
        "operationId": "changePassword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all roles",
        "description": "Retrieve all user roles",
        "operationId": "getRoles",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RolesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/clients": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Get all clients",
        "description": "Retrieve list of clients with pagination and filtering",
        "operationId": "getClients",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/SortByParam"
          },
          {
            "$ref": "#/components/parameters/SortOrderParam"
          },
          {
            "$ref": "#/components/parameters/SearchParam"
          },
          {
            "$ref": "#/components/parameters/StatusParam"
          },
          {
            "name": "programId",
            "in": "query",
            "description": "Filter by program ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Create client",
        "description": "Create a new client",
        "operationId": "createClient",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Client created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Client already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/clients/{id}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Get client by ID",
        "description": "Retrieve client details by ID",
        "operationId": "getClientById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Update client",
        "description": "Update client details",
        "operationId": "updateClient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Client updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict with existing data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/clients/{id}/authorizations": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Get client authorizations",
        "description": "Retrieve authorizations for a client",
        "operationId": "getClientAuthorizations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/StatusParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Create client authorization",
        "description": "Create a new authorization for a client",
        "operationId": "createClientAuthorization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAuthorizationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Authorization created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/services": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Get all services",
        "description": "Retrieve list of services with pagination and filtering",
        "operationId": "getServices",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/SortByParam"
          },
          {
            "$ref": "#/components/parameters/SortOrderParam"
          },
          {
            "$ref": "#/components/parameters/SearchParam"
          },
          {
            "name": "clientId",
            "in": "query",
            "description": "Filter by client ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "programId",
            "in": "query",
            "description": "Filter by program ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "serviceCode",
            "in": "query",
            "description": "Filter by service code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Filter by start date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Filter by end date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "billingStatus",
            "in": "query",
            "description": "Filter by billing status",
            "schema": {
              "type": "string",
              "enum": [
                "UNBILLED",
                "BILLED",
                "PARTIALLY_BILLED",
                "DENIED",
                "DELETED"
              ]
            }
          },
          {
            "name": "documentationStatus",
            "in": "query",
            "description": "Filter by documentation status",
            "schema": {
              "type": "string",
              "enum": [
                "COMPLETE",
                "INCOMPLETE",
                "PENDING_REVIEW",
                "REJECTED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "Create service",
        "description": "Create a new service record",
        "operationId": "createService",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Service created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Service already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/services/{id}": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Get service by ID",
        "description": "Retrieve service details by ID",
        "operationId": "getServiceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Service not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Services"
        ],
        "summary": "Update service",
        "description": "Update service details",
        "operationId": "updateService",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Service updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Service not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Services"
        ],
        "summary": "Delete service",
        "description": "Delete a service record",
        "operationId": "deleteService",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Service ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Service deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Service not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Service cannot be deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/services/validate": {
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "Validate services",
        "description": "Validate services for billing",
        "operationId": "validateServices",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateServicesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Validation results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/claims": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "Get all claims",
        "description": "Retrieves all claims with optional filtering and pagination",
        "operationId": "getAllClaims",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/SortByParam"
          },
          {
            "$ref": "#/components/parameters/SortOrderParam"
          },
          {
            "$ref": "#/components/parameters/SearchParam"
          },
          {
            "name": "clientId",
            "in": "query",
            "description": "Filter by client ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "payerId",
            "in": "query",
            "description": "Filter by payer ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "claimStatus",
            "in": "query",
            "description": "Filter by claim status",
            "schema": {
              "type": "string",
              "enum": [
                "DRAFT",
                "VALIDATED",
                "SUBMITTED",
                "ACKNOWLEDGED",
                "PENDING",
                "PAID",
                "PARTIAL_PAID",
                "DENIED",
                "APPEALED",
                "VOID",
                "FINAL_DENIED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Claims"
        ],
        "summary": "Create claim",
        "description": "Creates a new claim",
        "operationId": "createClaim",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClaimRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Claim created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/claims/{id}": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "Get claim by ID",
        "description": "Retrieve claim details by ID",
        "operationId": "getClaimById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Claim ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Claim not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Claims"
        ],
        "summary": "Update claim",
        "description": "Update claim details",
        "operationId": "updateClaim",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Claim ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClaimRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Claim updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Claim not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/claims/{id}/validate": {
      "post": {
        "tags": [
          "Claims"
        ],
        "summary": "Validate claim",
        "description": "Validate claim before submission",
        "operationId": "validateClaim",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Claim ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Validation results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimValidationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Claim not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/claims/{id}/submit": {
      "post": {
        "tags": [
          "Claims"
        ],
        "summary": "Submit claim",
        "description": "Submit claim to payer",
        "operationId": "submitClaim",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Claim ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitClaimRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Claim submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or claim not valid for submission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Claim not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/claims/batch": {
      "post": {
        "tags": [
          "Claims"
        ],
        "summary": "Process batch of claims",
        "description": "Create, validate, or submit batch of claims",
        "operationId": "processBatchClaims",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchClaimRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch processing results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchClaimResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/claims/status": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "Get claim status counts",
        "description": "Get counts of claims by status",
        "operationId": "getClaimStatusCounts",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for filtering",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for filtering",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "payerId",
            "in": "query",
            "description": "Filter by payer ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimStatusCountsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/billing/queue": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get billing queue",
        "description": "Get services ready for billing",
        "operationId": "getBillingQueue",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/SortByParam"
          },
          {
            "$ref": "#/components/parameters/SortOrderParam"
          },
          {
            "name": "programId",
            "in": "query",
            "description": "Filter by program ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "payerId",
            "in": "query",
            "description": "Filter by payer ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Filter by service start date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Filter by service end date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingQueueResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/payments": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Get all payments",
        "description": "Retrieve list of payments with pagination and filtering",
        "operationId": "getPayments",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/SortByParam"
          },
          {
            "$ref": "#/components/parameters/SortOrderParam"
          },
          {
            "$ref": "#/components/parameters/SearchParam"
          },
          {
            "name": "payerId",
            "in": "query",
            "description": "Filter by payer ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "reconciliationStatus",
            "in": "query",
            "description": "Filter by reconciliation status",
            "schema": {
              "type": "string",
              "enum": [
                "UNRECONCILED",
                "PARTIALLY_RECONCILED",
                "RECONCILED"
              ]
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Filter by payment start date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Filter by payment end date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Create payment",
        "description": "Record a new payment",
        "operationId": "createPayment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/payments/{id}": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Get payment by ID",
        "description": "Retrieve payment details by ID",
        "operationId": "getPaymentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Payment not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/payments/remittance": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Process remittance",
        "description": "Process remittance advice file",
        "operationId": "processRemittance",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Remittance advice file (835 or CSV)"
                  },
                  "payerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Payer ID"
                  },
                  "fileType": {
                    "type": "string",
                    "enum": [
                      "835",
                      "CSV",
                      "CUSTOM"
                    ],
                    "description": "Type of remittance file"
                  }
                },
                "required": [
                  "file",
                  "payerId",
                  "fileType"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Remittance processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemittanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid file or processing error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/payments/{id}/match": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Match payment to claims",
        "description": "Match payment to claims for reconciliation",
        "operationId": "matchPayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchPaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment matched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchPaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Payment not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/payments/{id}/reconcile": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Reconcile payment",
        "description": "Complete payment reconciliation",
        "operationId": "reconcilePayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReconcilePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment reconciled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Payment not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reports/standard/{type}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Generate standard report",
        "description": "Generate a standard financial report",
        "operationId": "generateStandardReport",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Report type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "revenue-by-program",
                "revenue-by-payer",
                "claims-status",
                "aging-accounts-receivable",
                "denial-analysis",
                "service-utilization"
              ]
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for report period",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for report period",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Report output format",
            "schema": {
              "type": "string",
              "enum": [
                "json",
                "pdf",
                "csv",
                "excel"
              ],
              "default": "json"
            }
          },
          {
            "name": "programId",
            "in": "query",
            "description": "Filter by program ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "payerId",
            "in": "query",
            "description": "Filter by payer ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reports/custom": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Generate custom report",
        "description": "Generate a custom report with specified parameters",
        "operationId": "generateCustomReport",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomReportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Report generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dashboard/metrics": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get dashboard metrics",
        "description": "Retrieve metrics for dashboard",
        "operationId": "getDashboardMetrics",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for metrics period",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for metrics period",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "programId",
            "in": "query",
            "description": "Filter by program ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "payerId",
            "in": "query",
            "description": "Filter by payer ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Metrics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardMetricsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/settings/programs": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get all programs",
        "description": "Retrieve all programs",
        "operationId": "getPrograms",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/StatusParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Create program",
        "description": "Create a new program",
        "operationId": "createProgram",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Program created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/settings/payers": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get all payers",
        "description": "Retrieve all payers",
        "operationId": "getPayers",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/StatusParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Create payer",
        "description": "Create a new payer",
        "operationId": "createPayer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePayerRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payer created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Authorization header using the Bearer scheme"
      }
    },
    "parameters": {
      "PageParam": {
        "name": "page",
        "in": "query",
        "description": "Page number for pagination",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "LimitParam": {
        "name": "limit",
        "in": "query",
        "description": "Number of items per page",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 20
        }
      },
      "SortByParam": {
        "name": "sortBy",
        "in": "query",
        "description": "Field to sort by",
        "schema": {
          "type": "string"
        }
      },
      "SortOrderParam": {
        "name": "sortOrder",
        "in": "query",
        "description": "Sort order (asc or desc)",
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc"
        }
      },
      "SearchParam": {
        "name": "search",
        "in": "query",
        "description": "Search term",
        "schema": {
          "type": "string"
        }
      },
      "StatusParam": {
        "name": "status",
        "in": "query",
        "description": "Filter by status",
        "schema": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "INACTIVE",
            "DELETED"
          ]
        }
      }
    },
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Error code"
              },
              "message": {
                "type": "string",
                "description": "Error message"
              },
              "details": {
                "type": "object",
                "description": "Additional error details"
              }
            },
            "required": [
              "code",
              "message"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password"
          },
          "rememberMe": {
            "type": "boolean",
            "description": "Whether to extend the session duration",
            "default": false
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "roleName": {
                "type": "string"
              },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "mfaEnabled": {
                "type": "boolean"
              },
              "lastLogin": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          },
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "expiresIn": {
            "type": "integer",
            "description": "Token expiration time in seconds"
          }
        },
        "required": [
          "user",
          "accessToken",
          "refreshToken",
          "expiresIn"
        ]
      },
      "MfaRequiredResponse": {
        "type": "object",
        "properties": {
          "mfaRequired": {
            "type": "boolean",
            "enum": [
              true
            ]
          },
          "mfaToken": {
            "type": "string",
            "description": "Temporary token for MFA verification"
          },
          "mfaMethod": {
            "type": "string",
            "enum": [
              "TOTP",
              "SMS",
              "EMAIL"
            ],
            "description": "MFA method configured for the user"
          }
        },
        "required": [
          "mfaRequired",
          "mfaToken",
          "mfaMethod"
        ]
      },
      "RefreshTokenRequest": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "Refresh token from previous authentication"
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "expiresIn": {
            "type": "integer",
            "description": "Token expiration time in seconds"
          }
        },
        "required": [
          "accessToken",
          "refreshToken",
          "expiresIn"
        ]
      },
      "MfaVerifyRequest": {
        "type": "object",
        "properties": {
          "mfaToken": {
            "type": "string",
            "description": "Temporary token from MFA required response"
          },
          "mfaCode": {
            "type": "string",
            "description": "Verification code from authenticator app, SMS, or email"
          },
          "rememberDevice": {
            "type": "boolean",
            "description": "Whether to remember this device for future logins",
            "default": false
          }
        },
        "required": [
          "mfaToken",
          "mfaCode"
        ]
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          }
        },
        "required": [
          "email"
        ]
      },
      "ResetPasswordRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Password reset token from email"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "New password"
          },
          "confirmPassword": {
            "type": "string",
            "format": "password",
            "description": "Confirm new password"
          }
        },
        "required": [
          "token",
          "password",
          "confirmPassword"
        ]
      },
      "ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "format": "password",
            "description": "Current password"
          },
          "newPassword": {
            "type": "string",
            "format": "password",
            "description": "New password"
          },
          "confirmPassword": {
            "type": "string",
            "format": "password",
            "description": "Confirm new password"
          }
        },
        "required": [
          "currentPassword",
          "newPassword",
          "confirmPassword"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "roleId": {
            "type": "string",
            "format": "uuid"
          },
          "roleName": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "LOCKED",
              "PENDING"
            ]
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "jobTitle": {
            "type": "string",
            "nullable": true
          },
          "mfaEnabled": {
            "type": "boolean"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "email",
          "firstName",
          "lastName",
          "roleId",
          "roleName",
          "status",
          "mfaEnabled",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserWithPermissions": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "type": "object",
            "properties": {
              "permissions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "permissions"
            ]
          }
        ]
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "roleId": {
            "type": "string",
            "format": "uuid"
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "jobTitle": {
            "type": "string",
            "nullable": true
          },
          "sendInvite": {
            "type": "boolean",
            "default": true
          },
          "requireMfa": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "email",
          "firstName",
          "lastName",
          "roleId"
        ]
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "roleId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "jobTitle": {
            "type": "string",
            "nullable": true
          },
          "requireMfa": {
            "type": "boolean"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isDefault": {
            "type": "boolean"
          },
          "isSystem": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "permissions",
          "isDefault",
          "isSystem",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserWithPermissions"
          }
        },
        "required": [
          "user"
        ]
      },
      "UsersResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "total": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          }
        },
        "required": [
          "users",
          "total",
          "page",
          "limit",
          "totalPages"
        ]
      },
      "RolesResponse": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          }
        },
        "required": [
          "roles"
        ]
      },
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "medicaidId": {
            "type": "string",
            "nullable": true
          },
          "medicareId": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "object",
            "properties": {
              "street1": {
                "type": "string"
              },
              "street2": {
                "type": "string",
                "nullable": true
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              }
            }
          },
          "contactInfo": {
            "type": "object",
            "properties": {
              "phone": {
                "type": "string",
                "nullable": true
              },
              "email": {
                "type": "string",
                "format": "email",
                "nullable": true
              },
              "emergencyContact": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "nullable": true
                  },
                  "phone": {
                    "type": "string",
                    "nullable": true
                  },
                  "relationship": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DISCHARGED"
            ]
          },
          "programs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "programId": {
                  "type": "string",
                  "format": "uuid"
                },
                "programName": {
                  "type": "string"
                },
                "startDate": {
                  "type": "string",
                  "format": "date"
                },
                "endDate": {
                  "type": "string",
                  "format": "date",
                  "nullable": true
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "ACTIVE",
                    "INACTIVE"
                  ]
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "firstName",
          "lastName",
          "dateOfBirth",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateClientRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "medicaidId": {
            "type": "string",
            "nullable": true
          },
          "medicareId": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "object",
            "properties": {
              "street1": {
                "type": "string"
              },
              "street2": {
                "type": "string",
                "nullable": true
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              }
            },
            "required": [
              "street1",
              "city",
              "state",
              "zip"
            ]
          },
          "contactInfo": {
            "type": "object",
            "properties": {
              "phone": {
                "type": "string",
                "nullable": true
              },
              "email": {
                "type": "string",
                "format": "email",
                "nullable": true
              },
              "emergencyContact": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "nullable": true
                  },
                  "phone": {
                    "type": "string",
                    "nullable": true
                  },
                  "relationship": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "programs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "programId": {
                  "type": "string",
                  "format": "uuid"
                },
                "startDate": {
                  "type": "string",
                  "format": "date"
                },
                "endDate": {
                  "type": "string",
                  "format": "date",
                  "nullable": true
                }
              },
              "required": [
                "programId",
                "startDate"
              ]
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ],
            "default": "ACTIVE"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "dateOfBirth"
        ]
      },
      "UpdateClientRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "medicaidId": {
            "type": "string",
            "nullable": true
          },
          "medicareId": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "object",
            "properties": {
              "street1": {
                "type": "string"
              },
              "street2": {
                "type": "string",
                "nullable": true
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              }
            }
          },
          "contactInfo": {
            "type": "object",
            "properties": {
              "phone": {
                "type": "string",
                "nullable": true
              },
              "email": {
                "type": "string",
                "format": "email",
                "nullable": true
              },
              "emergencyContact": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "nullable": true
                  },
                  "phone": {
                    "type": "string",
                    "nullable": true
                  },
                  "relationship": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DISCHARGED"
            ]
          }
        }
      },
      "ClientResponse": {
        "type": "object",
        "properties": {
          "client": {
            "$ref": "#/components/schemas/Client"
          }
        },
        "required": [
          "client"
        ]
      },
      "ClientsResponse": {
        "type": "object",
        "properties": {
          "clients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Client"
            }
          },
          "total": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          }
        },
        "required": [
          "clients",
          "total",
          "page",
          "limit",
          "totalPages"
        ]
      },
      "ClientSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "medicaidId": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "firstName",
          "lastName"
        ]
      },
      "Authorization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "clientId": {
            "type": "string",
            "format": "uuid"
          },
          "programId": {
            "type": "string",
            "format": "uuid"
          },
          "programName": {
            "type": "string"
          },
          "authorizationNumber": {
            "type": "string"
          },
          "serviceCode": {
            "type": "string"
          },
          "serviceName": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "units": {
            "type": "number",
            "format": "float"
          },
          "unitType": {
            "type": "string",
            "enum": [
              "HOUR",
              "DAY",
              "VISIT",
              "MONTH",
              "UNIT"
            ]
          },
          "frequency": {
            "type": "string",
            "enum": [
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "TOTAL"
            ]
          },
          "usedUnits": {
            "type": "number",
            "format": "float"
          },
          "remainingUnits": {
            "type": "number",
            "format": "float"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "EXPIRED",
              "EXHAUSTED",
              "PENDING",
              "CANCELLED"
            ]
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "clientId",
          "programId",
          "programName",
          "authorizationNumber",
          "serviceCode",
          "serviceName",
          "startDate",
          "endDate",
          "units",
          "unitType",
          "frequency",
          "usedUnits",
          "remainingUnits",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateAuthorizationRequest": {
        "type": "object",
        "properties": {
          "programId": {
            "type": "string",
            "format": "uuid"
          },
          "authorizationNumber": {
            "type": "string"
          },
          "serviceCode": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "units": {
            "type": "number",
            "format": "float"
          },
          "unitType": {
            "type": "string",
            "enum": [
              "HOUR",
              "DAY",
              "VISIT",
              "MONTH",
              "UNIT"
            ]
          },
          "frequency": {
            "type": "string",
            "enum": [
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "TOTAL"
            ]
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "programId",
          "authorizationNumber",
          "serviceCode",
          "startDate",
          "endDate",
          "units",
          "unitType",
          "frequency"
        ]
      },
      "AuthorizationResponse": {
        "type": "object",
        "properties": {
          "authorization": {
            "$ref": "#/components/schemas/Authorization"
          }
        },
        "required": [
          "authorization"
        ]
      },
      "AuthorizationsResponse": {
        "type": "object",
        "properties": {
          "authorizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Authorization"
            }
          },
          "total": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          }
        },
        "required": [
          "authorizations",
          "total",
          "page",
          "limit",
          "totalPages"
        ]
      },
      "Service": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "clientId": {
            "type": "string",
            "format": "uuid"
          },
          "programId": {
            "type": "string",
            "format": "uuid"
          },
          "serviceTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "serviceCode": {
            "type": "string"
          },
          "serviceDate": {
            "type": "string",
            "format": "date"
          },
          "units": {
            "type": "number",
            "format": "float"
          },
          "rate": {
            "type": "number",
            "format": "float"
          },
          "amount": {
            "type": "number",
            "format": "float"
          },
          "authorizationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "staffId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "facilityId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "documentationStatus": {
            "type": "string",
            "enum": [
              "COMPLETE",
              "INCOMPLETE",
              "PENDING_REVIEW",
              "REJECTED"
            ]
          },
          "billingStatus": {
            "type": "string",
            "enum": [
              "UNBILLED",
              "BILLED",
              "PARTIALLY_BILLED",
              "DENIED",
              "DELETED"
            ]
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "required": [
          "id",
          "clientId",
          "programId",
          "serviceTypeId",
          "serviceCode",
          "serviceDate",
          "units",
          "rate",
          "amount",
          "documentationStatus",
          "billingStatus",
          "createdAt",
          "updatedAt"
        ]
      },
      "ServiceWithRelations": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Service"
          },
          {
            "type": "object",
            "properties": {
              "client": {
                "$ref": "#/components/schemas/ClientSummary"
              },
              "program": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "serviceType": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  }
                }
              },
              "authorization": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "authorizationNumber": {
                    "type": "string"
                  },
                  "remainingUnits": {
                    "type": "number",
                    "format": "float"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "nullable": true
              },
              "staff": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "nullable": true
              },
              "facility": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "nullable": true
              }
            }
          }
        ]
      },
      "ServiceSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "clientId": {
            "type": "string",
            "format": "uuid"
          },
          "serviceCode": {
            "type": "string"
          },
          "serviceDate": {
            "type": "string",
            "format": "date"
          },
          "units": {
            "type": "number",
            "format": "float"
          },
          "rate": {
            "type": "number",
            "format": "float"
          },
          "amount": {
            "type": "number",
            "format": "float"
          },
          "billedUnits": {
            "type": "number",
            "format": "float"
          },
          "billedAmount": {
            "type": "number",
            "format": "float"
          },
          "serviceLineNumber": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "id",
          "clientId",
          "serviceCode",
          "serviceDate",
          "units",
          "rate",
          "amount"
        ]
      },
      "CreateServiceRequest": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "format": "uuid"
          },
          "programId": {
            "type": "string",
            "format": "uuid"
          },
          "serviceTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "serviceCode": {
            "type": "string"
          },
          "serviceDate": {
            "type": "string",
            "format": "date"
          },
          "units": {
            "type": "number",
            "format": "float"
          },
          "rate": {
            "type": "number",
            "format": "float"
          },
          "authorizationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "staffId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "facilityId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "documentationStatus": {
            "type": "string",
            "enum": [
              "COMPLETE",
              "INCOMPLETE",
              "PENDING_REVIEW"
            ],
            "default": "INCOMPLETE"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "clientId",
          "programId",
          "serviceTypeId",
          "serviceCode",
          "serviceDate",
          "units",
          "rate"
        ]
      },
      "UpdateServiceRequest": {
        "type": "object",
        "properties": {
          "programId": {
            "type": "string",
            "format": "uuid"
          },
          "serviceTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "serviceCode": {
            "type": "string"
          },
          "serviceDate": {
            "type": "string",
            "format": "date"
          },
          "units": {
            "type": "number",
            "format": "float"
          },
          "rate": {
            "type": "number",
            "format": "float"
          },
          "authorizationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "staffId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "facilityId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "documentationStatus": {
            "type": "string",
            "enum": [
              "COMPLETE",
              "INCOMPLETE",
              "PENDING_REVIEW",
              "REJECTED"
            ]
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ValidateServicesRequest": {
        "type": "object",
        "properties": {
          "serviceIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "serviceIds"
        ]
      },
      "ValidationResponse": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "serviceId": {
                  "type": "string",
                  "format": "uuid"
                },
                "valid": {
                  "type": "boolean"
                },
                "issues": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "severity": {
                        "type": "string",
                        "enum": [
                          "ERROR",
                          "WARNING",
                          "INFO"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "valid",
          "results"
        ]
      },
      "ServiceResponse": {
        "type": "object",
        "properties": {
          "service": {
            "$ref": "#/components/schemas/ServiceWithRelations"
          }
        },
        "required": [
          "service"
        ]
      },
      "ServicesResponse": {
        "type": "object",
        "properties": {
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceWithRelations"
            }
          },
          "total": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          }
        },
        "required": [
          "services",
          "total",
          "page",
          "limit",
          "totalPages"
        ]
      },
      "Claim": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "claimNumber": {
            "type": "string"
          },
          "externalClaimId": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "string",
            "format": "uuid"
          },
          "payerId": {
            "type": "string",
            "format": "uuid"
          },
          "claimType": {
            "type": "string",
            "enum": [
              "ORIGINAL",
              "ADJUSTMENT",
              "REPLACEMENT",
              "VOID"
            ]
          },
          "claimStatus": {
            "type": "string",
            "enum": [
              "DRAFT",
              "VALIDATED",
              "SUBMITTED",
              "ACKNOWLEDGED",
              "PENDING",
              "PAID",
              "PARTIAL_PAID",
              "DENIED",
              "APPEALED",
              "VOID",
              "FINAL_DENIED"
            ]
          },
          "totalAmount": {
            "type": "number",
            "format": "float"
          },
          "serviceStartDate": {
            "type": "string",
            "format": "date"
          },
          "serviceEndDate": {
            "type": "string",
            "format": "date"
          },
          "submissionDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "submissionMethod": {
            "type": "string",
            "enum": [
              "ELECTRONIC",
              "PAPER",
              "PORTAL",
              "CLEARINGHOUSE",
              "DIRECT"
            ],
            "nullable": true
          },
          "adjudicationDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "denialReason": {
            "type": "string",
            "enum": [
              "DUPLICATE_CLAIM",
              "SERVICE_NOT_COVERED",
              "AUTHORIZATION_MISSING",
              "AUTHORIZATION_INVALID",
              "CLIENT_INELIGIBLE",
              "PROVIDER_INELIGIBLE",
              "TIMELY_FILING",
              "INVALID_CODING",
              "MISSING_INFORMATION",
              "OTHER"
            ],
            "nullable": true
          },
          "denialDetails": {
            "type": "string",
            "nullable": true
          },
          "adjustmentCodes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "originalClaimId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "required": [
          "id",
          "claimNumber",
          "clientId",
          "payerId",
          "claimType",
          "claimStatus",
          "totalAmount",
          "serviceStartDate",
          "serviceEndDate",
          "createdAt",
          "updatedAt"
        ]
      },
      "ClaimWithRelations": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Claim"
          },
          {
            "type": "object",
            "properties": {
              "client": {
                "$ref": "#/components/schemas/ClientSummary"
              },
              "payer": {
                "$ref": "#/components/schemas/PayerSummary"
              },
              "originalClaim": {
                "$ref": "#/components/schemas/ClaimSummary",
                "nullable": true
              },
              "services": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceSummary"
                }
              },
              "statusHistory": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClaimStatusHistory"
                }
              }
            }
          }
        ]
      },
      "ClaimSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "claimNumber": {
            "type": "string"
          },
          "clientId": {
            "type": "string",
            "format": "uuid"
          },
          "clientName": {
            "type": "string"
          },
          "payerId": {
            "type": "string",
            "format": "uuid"
          },
          "payerName": {
            "type": "string"
          },
          "claimStatus": {
            "type": "string",
            "enum": [
              "DRAFT",
              "VALIDATED",
              "SUBMITTED",
              "ACKNOWLEDGED",
              "PENDING",
              "PAID",
              "PARTIAL_PAID",
              "DENIED",
              "APPEALED",
              "VOID",
              "FINAL_DENIED"
            ]
          },
          "totalAmount": {
            "type": "number",
            "format": "float"
          },
          "serviceStartDate": {
            "type": "string",
            "format": "date"
          },
          "serviceEndDate": {
            "type": "string",
            "format": "date"
          },
          "submissionDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "claimAge": {
            "type": "integer",
            "description": "Age in days"
          }
        },
        "required": [
          "id",
          "claimNumber",
          "clientId",
          "clientName",
          "payerId",
          "payerName",
          "claimStatus",
          "totalAmount",
          "serviceStartDate",
          "serviceEndDate",
          "claimAge"
        ]
      },
      "PayerSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "payerType": {
            "type": "string",
            "enum": [
              "MEDICAID",
              "MEDICARE",
              "PRIVATE_INSURANCE",
              "MANAGED_CARE",
              "SELF_PAY",
              "GRANT",
              "OTHER"
            ]
          },
          "isElectronic": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "payerType",
          "isElectronic"
        ]
      },
      "ClaimStatusHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "claimId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "VALIDATED",
              "SUBMITTED",
              "ACKNOWLEDGED",
              "PENDING",
              "PAID",
              "PARTIAL_PAID",
              "DENIED",
              "APPEALED",
              "VOID",
              "FINAL_DENIED"
            ]
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "required": [
          "id",
          "claimId",
          "status",
          "timestamp"
        ]
      },
      "CreateClaimRequest": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "format": "uuid"
          },
          "payerId": {
            "type": "string",
            "format": "uuid"
          },
          "claimType": {
            "type": "string",
            "enum": [
              "ORIGINAL",
              "ADJUSTMENT",
              "REPLACEMENT",
              "VOID"
            ]
          },
          "serviceIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "originalClaimId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "clientId",
          "payerId",
          "claimType",
          "serviceIds"
        ]
      },
      "UpdateClaimRequest": {
        "type": "object",
        "properties": {
          "payerId": {
            "type": "string",
            "format": "uuid"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "serviceIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "SubmitClaimRequest": {
        "type": "object",
        "properties": {
          "submissionMethod": {
            "type": "string",
            "enum": [
              "ELECTRONIC",
              "PAPER",
              "PORTAL",
              "CLEARINGHOUSE",
              "DIRECT"
            ]
          }
        },
        "required": [
          "submissionMethod"
        ]
      },
      "ClaimValidationResponse": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "issues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "severity": {
                  "type": "string",
                  "enum": [
                    "ERROR",
                    "WARNING",
                    "INFO"
                  ]
                },
                "field": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          }
        },
        "required": [
          "valid",
          "issues"
        ]
      },
      "BatchClaimRequest": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "enum": [
              "CREATE",
              "VALIDATE",
              "SUBMIT"
            ]
          },
          "claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateClaimRequest"
            }
          },
          "claimIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "submissionMethod": {
            "type": "string",
            "enum": [
              "ELECTRONIC",
              "PAPER",
              "PORTAL",
              "CLEARINGHOUSE",
              "DIRECT"
            ],
            "nullable": true
          }
        },
        "required": [
          "operation"
        ]
      },
      "BatchClaimResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "operationResults": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "claimId": {
                  "type": "string",
                  "format": "uuid"
                },
                "success": {
                  "type": "boolean"
                },
                "claim": {
                  "$ref": "#/components/schemas/ClaimSummary",
                  "nullable": true
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "nullable": true
                }
              }
            }
          },
          "summary": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer"
              },
              "successful": {
                "type": "integer"
              },
              "failed": {
                "type": "integer"
              }
            }
          }
        },
        "required": [
          "success",
          "operationResults",
          "summary"
        ]
      },
      "ClaimStatusCountsResponse": {
        "type": "object",
        "properties": {
          "counts": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          },
          "totalAmount": {
            "type": "number",
            "format": "float"
          },
          "paidAmount": {
            "type": "number",
            "format": "float"
          },
          "outstandingAmount": {
            "type": "number",
            "format": "float"
          },
          "denialRate": {
            "type": "number",
            "format": "float"
          }
        },
        "required": [
          "counts",
          "totalAmount",
          "paidAmount",
          "outstandingAmount",
          "denialRate"
        ]
      },
      "ClaimResponse": {
        "type": "object",
        "properties": {
          "claim": {
            "$ref": "#/components/schemas/ClaimWithRelations"
          }
        },
        "required": [
          "claim"
        ]
      },
      "ClaimsResponse": {
        "type": "object",
        "properties": {
          "claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimWithRelations"
            }
          },
          "total": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          }
        },
        "required": [
          "claims",
          "total",
          "page",
          "limit",
          "totalPages"
        ]
      },
      "BillingQueueResponse": {
        "type": "object",
        "properties": {
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceWithRelations"
            }
          },
          "total": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          },
          "summary": {
            "type": "object",
            "properties": {
              "totalAmount": {
                "type": "number",
                "format": "float"
              },
              "totalServices": {
                "type": "integer"
              },
              "programBreakdown": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "programId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "programName": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "amount": {
                      "type": "number",
                      "format": "float"
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "services",
          "total",
          "page",
          "limit",
          "totalPages",
          "summary"
        ]
      },
      "Payment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "payerId": {
            "type": "string",
            "format": "uuid"
          },
          "paymentDate": {
            "type": "string",
            "format": "date"
          },
          "paymentAmount": {
            "type": "number",
            "format": "float"
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "CHECK",
              "EFT",
              "CREDIT_CARD",
              "CASH",
              "OTHER"
            ]
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "remittanceId": {
            "type": "string",
            "nullable": true
          },
          "reconciliationStatus": {
            "type": "string",
            "enum": [
              "UNRECONCILED",
              "PARTIALLY_RECONCILED",
              "RECONCILED"
            ]
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "required": [
          "id",
          "payerId",
          "paymentDate",
          "paymentAmount",
          "paymentMethod",
          "reconciliationStatus",
          "createdAt",
          "updatedAt"
        ]
      },
      "PaymentWithRelations": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Payment"
          },
          {
            "type": "object",
            "properties": {
              "payer": {
                "$ref": "#/components/schemas/PayerSummary"
              },
              "claims": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "claimId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "claimNumber": {
                      "type": "string"
                    },
                    "clientName": {
                      "type": "string"
                    },
                    "billedAmount": {
                      "type": "number",
                      "format": "float"
                    },
                    "paidAmount": {
                      "type": "number",
                      "format": "float"
                    },
                    "adjustmentAmount": {
                      "type": "number",
                      "format": "float"
                    },
                    "adjustmentCodes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "CreatePaymentRequest": {
        "type": "object",
        "properties": {
          "payerId": {
            "type": "string",
            "format": "uuid"
          },
          "paymentDate": {
            "type": "string",
            "format": "date"
          },
          "paymentAmount": {
            "type": "number",
            "format": "float"
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "CHECK",
              "EFT",
              "CREDIT_CARD",
              "CASH",
              "OTHER"
            ]
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "payerId",
          "paymentDate",
          "paymentAmount",
          "paymentMethod"
        ]
      },
      "MatchPaymentRequest": {
        "type": "object",
        "properties": {
          "claimPayments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "claimId": {
                  "type": "string",
                  "format": "uuid"
                },
                "paidAmount": {
                  "type": "number",
                  "format": "float"
                },
                "adjustmentAmount": {
                  "type": "number",
                  "format": "float",
                  "nullable": true
                },
                "adjustmentCodes": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "nullable": true
                }
              },
              "required": [
                "claimId",
                "paidAmount"
              ]
            }
          }
        },
        "required": [
          "claimPayments"
        ]
      },
      "MatchPaymentResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "payment": {
            "$ref": "#/components/schemas/PaymentWithRelations"
          },
          "unmatchedAmount": {
            "type": "number",
            "format": "float"
          }
        },
        "required": [
          "success",
          "payment",
          "unmatchedAmount"
        ]
      },
      "ReconcilePaymentRequest": {
        "type": "object",
        "properties": {
          "reconciliationStatus": {
            "type": "string",
            "enum": [
              "RECONCILED"
            ],
            "default": "RECONCILED"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "reconciliationStatus"
        ]
      },
      "RemittanceResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "paymentId": {
            "type": "string",
            "format": "uuid"
          },
          "paymentAmount": {
            "type": "number",
            "format": "float"
          },
          "claimCount": {
            "type": "integer"
          },
          "processingDetails": {
            "type": "object",
            "properties": {
              "matchedClaims": {
                "type": "integer"
              },
              "unmatchedClaims": {
                "type": "integer"
              },
              "errorCount": {
                "type": "integer"
              }
            }
          }
        },
        "required": [
          "success",
          "paymentId",
          "paymentAmount",
          "claimCount",
          "processingDetails"
        ]
      },
      "PaymentResponse": {
        "type": "object",
        "properties": {
          "payment": {
            "$ref": "#/components/schemas/PaymentWithRelations"
          }
        },
        "required": [
          "payment"
        ]
      },
      "PaymentsResponse": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentWithRelations"
            }
          },
          "total": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          }
        },
        "required": [
          "payments",
          "total",
          "page",
          "limit",
          "totalPages"
        ]
      },
      "ReportData": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dateRange": {
            "type": "object",
            "properties": {
              "start": {
                "type": "string",
                "format": "date"
              },
              "end": {
                "type": "string",
                "format": "date"
              }
            }
          },
          "filters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "data": {
            "type": "object"
          },
          "summary": {
            "type": "object",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "properties": {
              "generatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "generatedBy": {
                "type": "string"
              },
              "reportType": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "title",
          "dateRange",
          "data",
          "metadata"
        ]
      },
      "ReportResponse": {
        "type": "object",
        "properties": {
          "report": {
            "$ref": "#/components/schemas/ReportData"
          }
        },
        "required": [
          "report"
        ]
      },
      "CustomReportRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "reportType": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "format": {
            "type": "string",
            "enum": [
              "json",
              "pdf",
              "csv",
              "excel"
            ],
            "default": "json"
          },
          "filters": {
            "type": "object",
            "properties": {
              "programId": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "payerId": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "facilityId": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              }
            }
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "groupBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "sortBy": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "desc",
            "nullable": true
          }
        },
        "required": [
          "title",
          "reportType",
          "startDate",
          "endDate"
        ]
      },
      "DashboardMetricsResponse": {
        "type": "object",
        "properties": {
          "revenue": {
            "type": "object",
            "properties": {
              "current": {
                "type": "number",
                "format": "float"
              },
              "previous": {
                "type": "number",
                "format": "float"
              },
              "changePercent": {
                "type": "number",
                "format": "float"
              },
              "trend": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "period": {
                      "type": "string"
                    },
                    "value": {
                      "type": "number",
                      "format": "float"
                    }
                  }
                }
              }
            }
          },
          "claims": {
            "type": "object",
            "properties": {
              "statusCounts": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer"
                }
              },
              "cleanClaimRate": {
                "type": "number",
                "format": "float"
              },
              "denialRate": {
                "type": "number",
                "format": "float"
              },
              "averageProcessingDays": {
                "type": "number",
                "format": "float"
              }
            }
          },
          "programRevenue": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "programId": {
                  "type": "string",
                  "format": "uuid"
                },
                "programName": {
                  "type": "string"
                },
                "revenue": {
                  "type": "number",
                  "format": "float"
                },
                "percent": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          },
          "agingReceivables": {
            "type": "object",
            "properties": {
              "current": {
                "type": "number",
                "format": "float"
              },
              "thirtyDays": {
                "type": "number",
                "format": "float"
              },
              "sixtyDays": {
                "type": "number",
                "format": "float"
              },
              "ninetyDays": {
                "type": "number",
                "format": "float"
              },
              "ninetyPlusDays": {
                "type": "number",
                "format": "float"
              },
              "totalOutstanding": {
                "type": "number",
                "format": "float"
              }
            }
          },
          "alerts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "CLAIM_DENIAL",
                    "FILING_DEADLINE",
                    "AUTHORIZATION_EXPIRING",
                    "PAYMENT_DISCREPANCY",
                    "SYSTEM_ERROR"
                  ]
                },
                "severity": {
                  "type": "string",
                  "enum": [
                    "LOW",
                    "MEDIUM",
                    "HIGH",
                    "CRITICAL"
                  ]
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "object"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        },
        "required": [
          "revenue",
          "claims",
          "programRevenue",
          "agingReceivables",
          "alerts"
        ]
      },
      "Program": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "fundingSource": {
            "type": "string",
            "enum": [
              "MEDICAID",
              "MEDICARE",
              "PRIVATE_INSURANCE",
              "GRANT",
              "STATE",
              "COUNTY",
              "SELF_PAY",
              "OTHER"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "settings": {
            "type": "object",
            "additionalProperties": true,
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "code",
          "fundingSource",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateProgramRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "fundingSource": {
            "type": "string",
            "enum": [
              "MEDICAID",
              "MEDICARE",
              "PRIVATE_INSURANCE",
              "GRANT",
              "STATE",
              "COUNTY",
              "SELF_PAY",
              "OTHER"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ],
            "default": "ACTIVE"
          },
          "settings": {
            "type": "object",
            "additionalProperties": true,
            "nullable": true
          }
        },
        "required": [
          "name",
          "code",
          "fundingSource"
        ]
      },
      "ProgramResponse": {
        "type": "object",
        "properties": {
          "program": {
            "$ref": "#/components/schemas/Program"
          }
        },
        "required": [
          "program"
        ]
      },
      "ProgramsResponse": {
        "type": "object",
        "properties": {
          "programs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Program"
            }
          },
          "total": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          }
        },
        "required": [
          "programs",
          "total",
          "page",
          "limit",
          "totalPages"
        ]
      },
      "Payer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "payerId": {
            "type": "string",
            "nullable": true
          },
          "payerType": {
            "type": "string",
            "enum": [
              "MEDICAID",
              "MEDICARE",
              "PRIVATE_INSURANCE",
              "MANAGED_CARE",
              "SELF_PAY",
              "GRANT",
              "OTHER"
            ]
          },
          "address": {
            "type": "object",
            "properties": {
              "street1": {
                "type": "string",
                "nullable": true
              },
              "street2": {
                "type": "string",
                "nullable": true
              },
              "city": {
                "type": "string",
                "nullable": true
              },
              "state": {
                "type": "string",
                "nullable": true
              },
              "zip": {
                "type": "string",
                "nullable": true
              }
            },
            "nullable": true
          },
          "contactInfo": {
            "type": "object",
            "properties": {
              "phone": {
                "type": "string",
                "nullable": true
              },
              "fax": {
                "type": "string",
                "nullable": true
              },
              "email": {
                "type": "string",
                "format": "email",
                "nullable": true
              },
              "website": {
                "type": "string",
                "nullable": true
              },
              "contactPerson": {
                "type": "string",
                "nullable": true
              }
            },
            "nullable": true
          },
          "isElectronic": {
            "type": "boolean"
          },
          "submissionMethod": {
            "type": "string",
            "enum": [
              "ELECTRONIC",
              "PAPER",
              "PORTAL",
              "CLEARINGHOUSE",
              "DIRECT"
            ]
          },
          "billingSettings": {
            "type": "object",
            "properties": {
              "timely": {
                "type": "integer",
                "description": "Timely filing limit in days"
              },
              "claimFormat": {
                "type": "string",
                "enum": [
                  "837P",
                  "837I",
                  "CMS1500",
                  "UB04",
                  "CUSTOM"
                ]
              },
              "providerNpi": {
                "type": "string",
                "nullable": true
              },
              "billToAddress": {
                "type": "object",
                "properties": {
                  "street1": {
                    "type": "string",
                    "nullable": true
                  },
                  "street2": {
                    "type": "string",
                    "nullable": true
                  },
                  "city": {
                    "type": "string",
                    "nullable": true
                  },
                  "state": {
                    "type": "string",
                    "nullable": true
                  },
                  "zip": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "customFields": {
                "type": "object",
                "additionalProperties": true,
                "nullable": true
              }
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "payerType",
          "isElectronic",
          "submissionMethod",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreatePayerRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "payerId": {
            "type": "string",
            "nullable": true
          },
          "payerType": {
            "type": "string",
            "enum": [
              "MEDICAID",
              "MEDICARE",
              "PRIVATE_INSURANCE",
              "MANAGED_CARE",
              "SELF_PAY",
              "GRANT",
              "OTHER"
            ]
          },
          "address": {
            "type": "object",
            "properties": {
              "street1": {
                "type": "string",
                "nullable": true
              },
              "street2": {
                "type": "string",
                "nullable": true
              },
              "city": {
                "type": "string",
                "nullable": true
              },
              "state": {
                "type": "string",
                "nullable": true
              },
              "zip": {
                "type": "string",
                "nullable": true
              }
            },
            "nullable": true
          },
          "contactInfo": {
            "type": "object",
            "properties": {
              "phone": {
                "type": "string",
                "nullable": true
              },
              "fax": {
                "type": "string",
                "nullable": true
              },
              "email": {
                "type": "string",
                "format": "email",
                "nullable": true
              },
              "website": {
                "type": "string",
                "nullable": true
              },
              "contactPerson": {
                "type": "string",
                "nullable": true
              }
            },
            "nullable": true
          },
          "isElectronic": {
            "type": "boolean"
          },
          "submissionMethod": {
            "type": "string",
            "enum": [
              "ELECTRONIC",
              "PAPER",
              "PORTAL",
              "CLEARINGHOUSE",
              "DIRECT"
            ]
          },
          "billingSettings": {
            "type": "object",
            "properties": {
              "timely": {
                "type": "integer",
                "description": "Timely filing limit in days"
              },
              "claimFormat": {
                "type": "string",
                "enum": [
                  "837P",
                  "837I",
                  "CMS1500",
                  "UB04",
                  "CUSTOM"
                ]
              },
              "providerNpi": {
                "type": "string",
                "nullable": true
              },
              "billToAddress": {
                "type": "object",
                "properties": {
                  "street1": {
                    "type": "string",
                    "nullable": true
                  },
                  "street2": {
                    "type": "string",
                    "nullable": true
                  },
                  "city": {
                    "type": "string",
                    "nullable": true
                  },
                  "state": {
                    "type": "string",
                    "nullable": true
                  },
                  "zip": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "customFields": {
                "type": "object",
                "additionalProperties": true,
                "nullable": true
              }
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ],
            "default": "ACTIVE"
          }
        },
        "required": [
          "name",
          "payerType",
          "isElectronic",
          "submissionMethod"
        ]
      },
      "PayerResponse": {
        "type": "object",
        "properties": {
          "payer": {
            "$ref": "#/components/schemas/Payer"
          }
        },
        "required": [
          "payer"
        ]
      },
      "PayersResponse": {
        "type": "object",
        "properties": {
          "payers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payer"
            }
          },
          "total": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          }
        },
        "required": [
          "payers",
          "total",
          "page",
          "limit",
          "totalPages"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}